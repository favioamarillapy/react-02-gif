{"version":3,"sources":["components/GifSearch.js","components/GifCard.js","helpers/GifHelper.js","components/Loading.js","components/GifGrid.js","hooks/useFetchGift.js","GifApp.js","index.js"],"names":["GifSearch","setCategories","useState","input","setInput","onSubmit","e","preventDefault","className","placeholder","type","value","onChange","target","GifCard","id","title","img","Card","style","width","height","Img","variant","src","Body","Title","Text","getData","category","a","url","encodeURI","fetch","resp","json","data","dataFormat","map","gif","images","downsized_large","Loading","loading","color","GifGrid","setLoading","setData","useEffect","then","gifs","useFetchGift","Row","marginBottom","Col","md","GifApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"6LAEaA,EAAY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAExB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OACI,sBAAMC,SARK,SAACC,GACZA,EAAEC,iBAEFN,EAAc,CAACE,IACfC,EAAS,KAIT,SACI,uBACII,UAAU,eACVC,YAAY,YACZC,KAAK,OACLC,MAAOR,EACPS,SAlBQ,SAACN,GACjBF,EAASE,EAAEO,OAAOF,a,cCJbG,EAAU,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEjC,OACI,eAACC,EAAA,EAAD,CAEIV,UAAU,oCACVW,MAAO,CAAEC,MAAO,QAASC,OAAQ,QAHrC,UAII,cAACH,EAAA,EAAKI,IAAN,CAAUC,QAAQ,MAAMC,IAAKP,EAAKI,OAAQ,MAC1C,eAACH,EAAA,EAAKO,KAAN,WACI,cAACP,EAAA,EAAKQ,MAAN,UAAaV,IACb,cAACE,EAAA,EAAKS,KAAN,SANCZ,I,yCCPJa,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,0DACfD,EADe,wBAETE,EAFS,0FAEgFC,UAAUH,GAF1F,+BAGII,MAAMF,GAHV,cAGTG,EAHS,gBAIQA,EAAKC,OAJb,uBAIPC,EAJO,EAIPA,KAEFC,EAAaD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC/B,MAAO,CACHxB,GAAIwB,EAAIxB,GACRC,MAAOuB,EAAIvB,MACXC,IAAG,UAAEsB,EAAIC,cAAN,aAAE,EAAYC,gBAAgBV,QAV1B,kBAcRM,GAdQ,4CAAH,sD,iBCIPK,EAAU,SAAC,GAAgB,EAAdC,QAEtB,OACI,cAAC,IAAD,CAAcjC,KAAM,UAAWkC,MAAO,UAAWvB,OAAQ,IAAKD,MAAO,OCDhEyB,EAAU,SAAC,GAA8B,IAA5BhB,EAA2B,EAA3BA,SAEtB,GAFiD,EAAjBiB,WCHR,SAACjB,GAEzB,MAAwB3B,mBAAS,CAC7BkC,KAAM,GACNO,SAAS,IAFb,mBAAOP,EAAP,KAAaW,EAAb,KAgBA,OAXAC,qBAAU,WACNpB,EAAQC,GACHoB,MAAK,SAAAC,GACFH,EAAQ,CACJX,KAAMc,EACNP,SAAS,SAItB,CAACd,IAEGO,EDbmBe,CAAatB,IAA/BO,EAAR,EAAQA,KAAMO,EAAd,EAAcA,QAEd,OACI,eAACS,EAAA,EAAD,CAAKjC,MAAO,CAAEkC,aAAc,IAA5B,UAEI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,qBAAI/C,UAAU,oCAAd,eAAsDqB,EAAtD,UAIHc,GACG,cAACS,EAAA,EAAD,CAAKjC,MAAO,CAAEkC,aAAc,IAA5B,SACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAI/C,UAAU,SAAvB,SACI,cAAC,EAAD,CAASmC,QAASA,QAK7BP,EAAKE,KAAI,SAAAC,GAAG,OACT,cAACe,EAAA,EAAD,CAAkBC,GAAI,EAAGpC,MAAO,CAAEkC,aAAc,IAAhD,SACI,cAAC,EAAD,eAA0Bd,GAAZA,EAAIxB,KADZwB,EAAIxB,WEAfyC,EAvBA,WAEb,MAAoCtD,mBAAS,IAA7C,mBAAOuD,EAAP,KAAmBxD,EAAnB,KAGA,OACE,gCACE,yCAEA,cAAC,EAAD,CAAWA,cAAeA,IAC1B,uBAEA,6BACGwD,EAAWnB,KAAI,SAACT,EAAU6B,GACzB,OAAO,cAAC,EAAD,CAAiB7B,SAAUA,GAAb6B,YCb/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5dad1c6d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const GifSearch = ({ setCategories }) => {\r\n\r\n    const [input, setInput] = useState('');\r\n\r\n    const inputChange = (e) => {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n\r\n        setCategories([input]);\r\n        setInput('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submit}>\r\n            <input\r\n                className=\"form-control\"\r\n                placeholder=\"Search...\"\r\n                type=\"text\"\r\n                value={input}\r\n                onChange={inputChange}\r\n            />\r\n        </form>\r\n    )\r\n}","import React from 'react'\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nexport const GifCard = ({ id, title, img }) => {\r\n\r\n    return (\r\n        <Card\r\n            key={id}\r\n            className=\"animate__animated animate__fadeIn\"\r\n            style={{ width: '18rem', height: '100%' }}>\r\n            <Card.Img variant=\"top\" src={img} height={200} />\r\n            <Card.Body>\r\n                <Card.Title>{title}</Card.Title>\r\n                <Card.Text>\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n","export const getData = async (category) => {\r\n    if (category) {\r\n        const url = `https://api.giphy.com/v1/gifs/search?api_key=E813qUR8a8ZJa0CE5bhG8LwYLLPhut6h&q=${encodeURI(category)}&offset=0&limit=10`;\r\n        const resp = await fetch(url);\r\n        const { data } = await resp.json();\r\n\r\n        const dataFormat = data.map(gif => {\r\n            return {\r\n                id: gif.id,\r\n                title: gif.title,\r\n                img: gif.images?.downsized_large.url\r\n            }\r\n        })\r\n\r\n        return dataFormat;\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactLoading from 'react-loading';\r\n\r\n\r\nexport const Loading = ({ loading }) => {\r\n\r\n    return (\r\n        <ReactLoading type={'bubbles'} color={'#20232a'} height={100} width={100} />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { GifCard } from './GifCard';\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useFetchGift } from '../hooks/useFetchGift';\r\nimport { Loading } from './Loading';\r\n\r\nexport const GifGrid = ({ category, setLoading }) => {\r\n\r\n    const { data, loading } = useFetchGift(category);\r\n\r\n    return (\r\n        <Row style={{ marginBottom: 40 }}>\r\n\r\n            <Col md={12}>\r\n                <h3 className=\"animate__animated animate__fadeIn\" >  {category}  </h3>\r\n            </Col>\r\n\r\n\r\n            {loading &&\r\n                <Row style={{ marginBottom: 40 }}>\r\n                    <Col md={12} className=\"center\">\r\n                        <Loading loading={loading} />\r\n                    </Col>\r\n                </Row>}\r\n\r\n\r\n            {data.map(gif => (\r\n                <Col key={gif.id} md={3} style={{ marginBottom: 20 }}>\r\n                    <GifCard key={gif.id} {...gif} />\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getData } from '../helpers/GifHelper';\r\n\r\nexport const useFetchGift = (category) => {\r\n\r\n    const [data, setData] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getData(category)\r\n            .then(gifs => {\r\n                setData({\r\n                    data: gifs,\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n    }, [category])\r\n\r\n    return data;\r\n\r\n}\r\n","import React, { useState } from 'react'\nimport { GifSearch } from './components/GifSearch';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifApp = () => {\n\n  const [categories, setCategories] = useState([]);\n\n\n  return (\n    <div>\n      <h2>Gif App</h2>\n\n      <GifSearch setCategories={setCategories} />\n      <br />\n\n      <ul>\n        {categories.map((category, i) => {\n          return <GifGrid key={i} category={category} />\n        })}\n      </ul>\n\n    </div>\n  )\n};\n\n\nexport default GifApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifApp from './GifApp';\n\nReactDOM.render(\n  <GifApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}